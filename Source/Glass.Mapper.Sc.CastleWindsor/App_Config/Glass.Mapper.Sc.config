<configuration>
	<components>

		<!-- CONFIGURATION RESOLVER PIPELINE TASKS START-->
		<component service="IConfigurationResolverTask" type="SitecoreItemResolverTask" lifestyle="transient" />
		<component service="IConfigurationResolverTask" type="MultiInterfaceResolverTask" lifestyle="transient" />
		<component service="IConfigurationResolverTask" type="TemplateInferredTypeTask" lifestyle="transient" />
		<component service="IConfigurationResolverTask" type="ConfigurationStandardResolverTask" lifestyle="transient" />
		<component service="IConfigurationResolverTask" type="ConfigurationOnDemandResolverTask'1[[SitecoreTypeConfiguration]]" lifestyle="transient" />
		<!-- CONFIGURATION RESOLVER PIPELINE TASKS END-->


		<!-- OBJECT CONSTRUCTION PIPELINE START-->
		<component service="ICacheManager" type="InMemoryCache" lifestyle="singleton" />

		<!-- dynamic must be first -->
		<component service="IObjectConstructionTask" type="CreateDynamicTask" lifestyle="transient" />

		<component service="IObjectConstructionTask>" type="CacheCheckTask" lifestyle="transient" />
		<component service="IObjectConstructionTask" type="SitecoreItemTask" lifestyle="transient" />
		<!--<component service="IObjectConstructionTask" type="WindsorConstruction" lifestyle="transient" />-->
		<component service="IObjectConstructionTask" type="CreateMultiInferaceTask" lifestyle="transient" />
		<component service="IObjectConstructionTask" type="CreateConcreteTask" lifestyle="transient" />,
		<component service="IObjectConstructionTask" type="CreateInterfaceTask" lifestyle="transient" />

		<component service="IObjectConstructionTask" type="CacheAddTask" lifestyle="transient" />
		<!-- OBJECT CONSTRUCTION PIPELINE END-->


		<!-- OBJECT SAVING PIPELINE START-->
		<component service="IObjectSavingTask" type="StandardSavingTask" lifestyle="transient" />
		<!-- OBJECT SAVING PIPELINE END-->

		<!-- DATAMAPPER RESOLVER PIPELINE START-->
		<component service="IDataMapperResolverTask" type="DataMapperStandardResolverTask" lifestyle="transient" />
		<!-- DATAMAPPER RESOLVER PIPELINE END-->

		<!-- QUERY PARAMETERS START-->
		<component service="ISitecoreQueryParameter" type="ItemDateNowParameter" lifestyle="transient" />
		<component service="ISitecoreQueryParameter" type="ItemEscapedPathParameter" lifestyle="transient" />
		<component service="ISitecoreQueryParameter" type="ItemIdNoBracketsParameter" lifestyle="transient" />
		<component service="ISitecoreQueryParameter" type="ItemIdParameter" lifestyle="transient" />
		<component service="ISitecoreQueryParameter" type="ItemPathParameter" lifestyle="transient" />
		<!-- QUERY PARAMETERS END-->


		<component service="AbstractDataMapper" type="SitecoreIgnoreMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreChildrenCastMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreChildrenMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldBooleanMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldDateTimeMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldDecimalMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldDoubleMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldEnumMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldFileMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldFloatMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldGuidMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldHtmlEncodingMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldIEnumerableMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldImageMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldIntegerMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldLinkMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldLongMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldNameValueCollectionMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldNullableDateTimeMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldNullableDoubleMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldNullableDecimalMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldNullableFloatMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldNullableGuidMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldNullableIntMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldRulesMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldStreamMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldStringMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreFieldTypeMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreIdMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreItemMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreInfoMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreNodeMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreLinkedMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreParentMapper" lifestyle="transient" />
		<component service="AbstractDataMapper" type="SitecoreQueryMapper>
()
																							.DynamicParameters((k, d) =>
																										{
																								d["parameters"] = k.ResolveAll<ISitecoreQueryParameter>();
                         })
                         .LifestyleTransient()

	</components>
</configuration>